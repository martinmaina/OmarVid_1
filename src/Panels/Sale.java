/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Panels;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author martin
 */
public class Sale extends javax.swing.JPanel {

    /**
     * Creates new form Sale
     */
    public Sale() {
        initComponents();
        DisplayTable();
//        jPanel1.setVisible(false);
        jLabel5.setVisible(true);
        debtorName.setVisible(true);
        pn.setEditable(false);
        price.setEditable(false);
        qn.setText("1");
        
      cashSale();
      findUsers();
        
    }

    public ArrayList<User> ListUsers(String valToSearch){
    ArrayList<User> usersList =  new ArrayList<User>();
    
    
    
    Statement st;
    ResultSet rs;
    try{
        Class.forName("com.mysql.jdbc.Driver");
        Connection con =    DriverManager.getConnection("jdbc:mysql://localhost:3306/OmarStockDatabase", "Admin", "root");
            st = con.createStatement();
            
            String SearchQuery = "select * from StockTable WHERE CONCAT(`productName`, `quantity`, `UCode`, `BP`, `SP`, `ProductId`) LIKE '%"+valToSearch+"%'";
            rs = st.executeQuery(SearchQuery);
            
            User user;
            
            while(rs.next()){
                user = new User(
                        rs.getString("productName"),
                        rs.getInt("quantity"),
                        rs.getString("UCode"),
                        rs.getInt("BP"),
                        rs.getInt("SP"),
                        rs.getInt("ProductId")
                );
                
                usersList.add(user);
            }
    }catch(Exception e){
        
    }
    
    return usersList;
    
}
    private void cashSale(){
          
//       jPanel1.setVisible(true);
    }
    
    public void findUsers(){
        ArrayList<User> users = ListUsers(searchtf.getText());
        DefaultTableModel model = new DefaultTableModel();
        
        model.setColumnIdentifiers(new Object[] {"ProductName", "quantity", "UCode", "BP", "SP", "ProductId"});
        
        Object [] row = new Object[6];
        
        for(int i = 0 ; i < users.size(); i++){
            row[0] = users.get(i).getproductName();
            row[1] = users.get(i).getquantity();
            row[2] = users.get(i).getUCode();
            row[3] = users.get(i).getBP();
            row[4] = users.get(i).getSP();
            row[5] = users.get(i).getProductId();
            
            model.addRow(row);
        }
        
        table.setModel(model);
                
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        pn = new javax.swing.JTextField();
        price = new javax.swing.JTextField();
        qn = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        searchtf = new javax.swing.JTextField();
        searchbtn = new javax.swing.JButton();
        pid = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        debtorName = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox<>();

        jLabel2.setText("Product Name");

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        jLabel1.setText("Price");

        jLabel3.setText("Quantity");

        price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceActionPerformed(evt);
            }
        });

        qn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qnActionPerformed(evt);
            }
        });

        jButton1.setText("Sell");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Discard");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(203, 14, 254));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("<html><u>Make A New Sale</u></html>");
        jLabel4.setToolTipText("Make a new sake here.");

        searchbtn.setText("Search");
        searchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbtnActionPerformed(evt);
            }
        });

        pid.setText("Product ID");

        jLabel5.setText("Debtor'  Name");

        jComboBox2.setMaximumRowCount(2);
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cash", "Debt" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(46, 46, 46)
                                .addComponent(debtorName, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(pid)
                                .addGap(35, 35, 35)
                                .addComponent(jLabel2)
                                .addGap(21, 21, 21)
                                .addComponent(pn)
                                .addGap(48, 48, 48)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addGap(26, 26, 26))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addGap(50, 50, 50)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(qn, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(searchtf, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(searchbtn)
                .addGap(50, 50, 50))
            .addGroup(layout.createSequentialGroup()
                .addGap(378, 378, 378)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1296, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchtf, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchbtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pid)
                    .addComponent(jLabel2)
                    .addComponent(pn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(qn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(debtorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addContainerGap(18, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void qnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qnActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        int i = table.getSelectedRow();
        TableModel model = table.getModel();
        pn.setText(model.getValueAt(i, 0).toString());
        price.setText(model.getValueAt(i, 4).toString());
        pid.setText(model.getValueAt(i, 5).toString());
    }//GEN-LAST:event_tableMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(qn.getText() == "" || qn.getText() == null){
            JOptionPane.showMessageDialog(null, "Provide Quantity");
        }
        else{
            if(jComboBox2.getSelectedItem() == "Cash"){
                
               try{
                   
                    Class.forName("com.mysql.jdbc.Driver");
            Connection con =    DriverManager.getConnection("jdbc:mysql://localhost:3306/OmarStockDatabase", "Admin", "root");
            int QTY = Integer.parseInt(qn.getText());
            int PRICE = Integer.parseInt(price.getText());
            int PID = Integer.parseInt(pid.getText());
            String SQL = "update StockTable set quantity = quantity - '"+QTY+"' where ProductId = '"+PID+"'";
            String sql = "insert into TotalSales (ProductName, price, quantity, totalPrice) values('"+pn.getText()+"', '"+price.getText()+"', '"+QTY+"', '"+(PRICE * QTY)+"') ";
            PreparedStatement ps = con.prepareStatement(sql);
            PreparedStatement PS = con.prepareStatement(SQL);
            PS.execute();
                ps.execute();
               JOptionPane.showMessageDialog(null, "Cash Sale of "+(QTY * PRICE)+"to "+debtorName.getText()+" Made Successful");pn.setText(null);
                pid.setText(null);price.setText(null);
                DisplayTable();
               }catch(Exception e){
                   JOptionPane.showMessageDialog(null, e.getMessage());
               }
            }else if(jComboBox2.getSelectedItem() == "Debt"){
                
                
                
                      try{
                           int QTY = Integer.parseInt(qn.getText());
            int PRICE = Integer.parseInt(price.getText());
            int PID = Integer.parseInt(pid.getText());
                           Class.forName("com.mysql.jdbc.Driver");
            Connection con =    DriverManager.getConnection("jdbc:mysql://localhost:3306/OmarStockDatabase", "Admin", "root");
  
              String SQL = "update StockTable set quantity = quantity - '"+QTY+"' where ProductId = '"+PID+"'";
            String sql = "insert into DebtorTable (customerName  , itemPurchased ,  quantity , price, totalCost) values('"+debtorName.getText()+"', '"+pn.getText()+"','"+qn.getText()+"', '"+price.getText()+"',  '"+(PRICE * QTY)+"') ";
//            String sql = "insert into DebtorTable (customerName as 'Customer Name' , itemPurchased as 'Item Purchased', datePurchased as 'Date of  Purchase', quantity as 'Quantity Purchased', price as 'Price per PC', (price * quantity) as 'Total Cost', paid as 'Amount Paid' ,((price * quantity) - paid) as 'Amount Due', id as 'Customer Ref No) values('"+debtorName.getText()+"', '"+pn.getText()+"', '"+price.getText()+"', '"+QTY+"', '"+(PRICE * QTY)+"') ";
  PreparedStatement PS = con.prepareStatement(SQL);
            PS.execute();
JOptionPane.showMessageDialog(null, "Debt Sale of "+(QTY * PRICE)+"to "+debtorName.getText()+" Made Successful");pn.setText(null);
                pid.setText(null);price.setText(null);
                DisplayTable();
            PreparedStatement ps = con.prepareStatement(sql);
                ps.execute();
                      }catch(Exception e){
                          JOptionPane.showMessageDialog(null, e.getMessage());
                      }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void searchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbtnActionPerformed
findUsers();        // TODO add your handling code here:
    }//GEN-LAST:event_searchbtnActionPerformed

    private void priceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
pn.setText(null);
                pid.setText(null);price.setText(null);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

     public void DisplayTable(){
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection con =    DriverManager.getConnection("jdbc:mysql://localhost:3306/OmarStockDatabase", "Admin", "root");
            String sql = "select * from StockTable";
            
            String SQL = " select SUM(price * quantity) as TotalSales from TotalSales ";
            
            PreparedStatement ps = con.prepareStatement(sql);
            PreparedStatement PS = con.prepareStatement(SQL);
//            getOperation();
//            jLabel2.setText(PS.executeQuery());

ResultSet RS = PS.executeQuery();
            System.out.println(RS);
            ResultSet rs = ps.executeQuery();
            
           table.setModel(DbUtils.resultSetToTableModel(rs));
            rs.close();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField debtorName;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel pid;
    private javax.swing.JTextField pn;
    private javax.swing.JTextField price;
    private javax.swing.JTextField qn;
    private javax.swing.JButton searchbtn;
    private javax.swing.JTextField searchtf;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
